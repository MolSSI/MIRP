/*! \file
 *
 * \brief Sandbox for testing features
 */

#include "mirp_bin/cmdline.hpp"
#include <mirp/mirp.h>
#include <iostream>
#include <limits>

using namespace mirp;

int main(void)
{
/*
    double alpha1[3] = { 130.7093200, 23.8088610, 6.4436083 };
    double coeff1[3] = { 0.15432897, 0.53532814, 0.44463454 };
    double A[3] = { 0.0, 0.0, 0.0 };
    double integral;

    mirp_integral4_exact(&integral,
                         0, A, 3, 1, alpha1, coeff1,
                         0, A, 3, 1, alpha1, coeff1,
                         0, A, 3, 1, alpha1, coeff1,
                         0, A, 3, 1, alpha1, coeff1,
                         mirp_eri);

    printf("Value: %32.18e\n", integral);

    arb_t tmp1, tmp2, tmp3;
    arb_init(tmp1);
    arb_init(tmp2);
    arb_init(tmp3);

    arb_set_str(tmp1, "[3.349622928453393862301777496869878591760112951487436212973855982746661199981757022893059679926897088897637136191989714477927635287987130933151061173037186464594269280963733080971238107751381410619142307478622978279261717850114126947902999804311464484059777030457923774007847146447285164239423794752298665774057555115372775134119365247897803783416748046875000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e-9 +/- 3.41e-108]", 400);
    arb_set_str(tmp3, "[3.349622928453393862301777496869878591760112951487436212973855982746661199981757022893059679926841281148626599363050953375760568138197177866815930541381862122118592102448124112105992718390393108504340539549332788094192082091131976656451190586338751073501397298375817900894744808920991003476828017093591682851183577440679073333740234375000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000e-9 +/- 5.59e-104]", 400);
    std::cout << arb_get_str(tmp1, 100, 0) << "\n";
    std::cout << arb_get_str(tmp3, 100, 0) << "\n";
    std::cout << arb_contains(tmp3, tmp1) << "\n";


*/
    return 0;
}
